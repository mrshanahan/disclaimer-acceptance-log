//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace KCD_1042192.Utility {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class SQL {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal SQL() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("KCD_1042192.Utility.SQL", typeof(SQL).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to INSERT INTO [EDDS].[eddsdbo].[KCD_1042192_DisclaimerAcceptanceLog]
        ///			VALUES (@DisclaimerId, @UserId, @Date).
        /// </summary>
        public static string AcceptDisclaimer {
            get {
                return ResourceManager.GetString("AcceptDisclaimer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT [ArtifactID]
        ///  FROM [EDDSDBO].[ArtifactGuid] (NOLOCK)
        ///  WHERE [ArtifactGuid] = @Guid.
        /// </summary>
        public static string ArtifactIdByGuid {
            get {
                return ResourceManager.GetString("ArtifactIdByGuid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IF OBJECT_ID(&apos;eddsdbo.KCD_1042192_DisclaimerError&apos;) IS NULL BEGIN
        ///	CREATE TABLE [EDDS].[eddsdbo].[KCD_1042192_DisclaimerError](
        ///		[Date] [datetime] NOT NULL,
        ///    		[UserID] [int] NOT NULL,
        ///    		[Error] [nvarchar](max) NOT NULL
        ///	)
        ///END.
        /// </summary>
        public static string CreateDisclaimerErrorTable {
            get {
                return ResourceManager.GetString("CreateDisclaimerErrorTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IF OBJECT_ID(&apos;eddsdbo.KCD_1042192_DisclaimerAcceptanceLog&apos;) IS NULL BEGIN
        ///	CREATE TABLE [EDDS].[eddsdbo].[KCD_1042192_DisclaimerAcceptanceLog](
        ///    		[DisclaimerID] [int]  NOT NULL,
        ///    		[UserID] [int] NOT NULL,
        ///    		[DateAccepted] [datetime] NOT NULL
        ///	)
        ///END.
        /// </summary>
        public static string CreateDisclaimerLogTable {
            get {
                return ResourceManager.GetString("CreateDisclaimerLogTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IF OBJECT_ID(&apos;eddsdbo.KCD_1042192_DisclaimerArchive&apos;) IS NULL BEGIN
        ///	CREATE TABLE [EDDS].[eddsdbo].[KCD_1042192_DisclaimerArchive](
        ///    		[ID] [int] NOT NULL primary key,
        ///    		[Title] [nvarchar](255) NOT NULL,
        ///    		[DisclaimerText] [nvarchar](max) NOT NULL,
        ///    		[DateCreated] [datetime] NOT NULL
        ///	)
        ///END.
        /// </summary>
        public static string CreateDislcaimerArchiveTable {
            get {
                return ResourceManager.GetString("CreateDislcaimerArchiveTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to BEGIN TRANSACTION DisableDisclaimerSolution
        ///  UPDATE [EDDS].[eddsdbo].[Configuration]
        ///	SET [Value] = &apos;&apos;
        ///	WHERE [Section] = &apos;kCura.EDDS.Web&apos;
        ///	AND [Name] = &apos;TermsLinkHref&apos;
        ///  UPDATE [EDDS].[eddsdbo].[Disclaimer] SET [Message] = &apos;&apos;
        ///COMMIT TRANSACTION DisableDisclaimerSolution.
        /// </summary>
        public static string DisableDisclaimerSolution {
            get {
                return ResourceManager.GetString("DisableDisclaimerSolution", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to BEGIN TRANSACTION DisableDisclaimerSolutionSept
        ///  UPDATE [EDDS].[eddsdbo].[Configuration]
        ///	SET [Value] = &apos;False&apos;
        ///	WHERE [Section] = &apos;kCura.EDDS.Web&apos;
        ///	AND [Name] = &apos;UsersMustAgreeToTermsOfUse&apos;
        ///  UPDATE [EDDS].[eddsdbo].[Disclaimer] SET [Message] = &apos;&apos;
        ///COMMIT TRANSACTION DisableDisclaimerSolutionSept.
        /// </summary>
        public static string DisableDisclaimerSolutionSept {
            get {
                return ResourceManager.GetString("DisableDisclaimerSolutionSept", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to BEGIN TRANSACTION EnableDisclaimerSolution
        ///  UPDATE [EDDS].[eddsdbo].[Disclaimer] SET [Message] = @HTML
        ///  IF @@rowcount = 0
        ///	BEGIN
        ///		INSERT INTO [EDDS].[eddsdbo].[Disclaimer] VALUES(@HTML)
        ///	END
        ///  UPDATE [EDDS].[eddsdbo].[Configuration]
        ///	SET [Value] = &apos;True&apos;
        ///	WHERE [Section] = &apos;kCura.EDDS.Web&apos;
        ///	AND [Name] = &apos;TermsLinkHref&apos;
        ///COMMIT TRANSACTION EnableDisclaimerSolution.
        /// </summary>
        public static string EnableDisclaimerSolution {
            get {
                return ResourceManager.GetString("EnableDisclaimerSolution", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to BEGIN TRANSACTION EnableDisclaimerSolutionSept
        ///  UPDATE [EDDS].[eddsdbo].[Disclaimer] SET [Message] = @HTML
        ///  IF @@rowcount = 0
        ///	BEGIN
        ///		INSERT INTO [EDDS].[eddsdbo].[Disclaimer] VALUES(@HTML)
        ///	END
        ///  UPDATE [EDDS].[eddsdbo].[Configuration]
        ///	SET [Value] = &apos;True&apos;
        ///	WHERE [Section] = &apos;kCura.EDDS.Web&apos;
        ///	AND [Name] = &apos;UsersMustAgreeToTermsOfUse&apos;
        ///COMMIT TRANSACTION EnableDisclaimerSolutionSept.
        /// </summary>
        public static string EnableDisclaimerSolutionSept {
            get {
                return ResourceManager.GetString("EnableDisclaimerSolutionSept", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT DISTINCT [UserArtifactID]
        ///FROM [EDDS].[eddsdbo].[GroupUser] (NOLOCK)
        ///WHERE GroupArtifactID IN (
        ///{0}
        ///).
        /// </summary>
        public static string FindGroupUsers {
            get {
                return ResourceManager.GetString("FindGroupUsers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UPDATE [EDDS].[eddsdbo].[User]
        ///	SET [HasAgreedToTermsOfUse] = 1
        ///	WHERE [ArtifactID]  IN (
        ///	{0}
        ///	).
        /// </summary>
        public static string FlagUsersWhoAlreadyAccepted {
            get {
                return ResourceManager.GetString("FlagUsersWhoAlreadyAccepted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UPDATE [EDDS].[eddsdbo].[User]
        ///	SET [HasAgreedToTermsOfUse] = 0
        ///	WHERE [ArtifactID] IN (
        ///	{0}
        ///	).
        /// </summary>
        public static string FlagUsersWhoNeedToAccept {
            get {
                return ResourceManager.GetString("FlagUsersWhoNeedToAccept", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT [ApplicationArtifactID]
        ///	FROM [EDDSDBO].[ApplicationObjectType] AS [AOT] WITH(NOLOCK) 
        ///	INNER JOIN [EDDSDBO].[ArtifactGuid] AS [AG] WITH(NOLOCK) ON AOT.ObjectTypeArtifactID = AG.ArtifactID 
        ///	WHERE [AG].ArtifactGuid = @ObjectGuid.
        /// </summary>
        public static string GetApplicationArtifactIdOfRelatedObject {
            get {
                return ResourceManager.GetString("GetApplicationArtifactIdOfRelatedObject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT &apos;[EDDSDBO].[&apos; +[ArtifactType] +&apos;]&apos;
        ///		FROM [EDDSDBO].[ArtifactType] (NOLOCK) AS [AT]
        ///		WHERE [ArtifactTypeID] IN(
        ///			SELECT [OT].[DescriptorArtifactTypeID]
        ///				FROM [EDDSDBO].[ObjectType] (NOLOCK) AS [OT]
        ///				INNER JOIN [EDDSDBO].[ArtifactGuid] (NOLOCK) AS [AG] ON [OT].[ArtifactID] = [AG].[ArtifactID]
        ///				WHERE [AG].[ArtifactGuid] = @DisclaimerObjGuid
        ///		).
        /// </summary>
        public static string GetDisclaimerObjTableName {
            get {
                return ResourceManager.GetString("GetDisclaimerObjTableName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to INSERT INTO [EDDS].[eddsdbo].[KCD_1042192_DisclaimerError] 
        ///	VALUES(@Date, @UserID, @ErrorMessage).
        /// </summary>
        public static string LogError {
            get {
                return ResourceManager.GetString("LogError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to INSERT INTO [EDDS].[eddsdbo].[KCD_1042192_DisclaimerArchive]
        ///	([ID], [Title], [DisclaimerText], [DateCreated])
        ///	  SELECT 
        ///		[D].[ArtifactID],
        ///		[D].[Title],
        ///		[D].[Text],
        ///		[A].[CreatedOn] 
        ///	FROM {0} AS [D]
        ///	INNER JOIN [eddsdbo].[Artifact] (NOLOCK) AS [A] On [D].[ArtifactID] = A.[ArtifactID]
        ///	WHERE [D].[ArtifactID] = @CurrentArtifactID.
        /// </summary>
        public static string MoveDisclaimerToArchive {
            get {
                return ResourceManager.GetString("MoveDisclaimerToArchive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT DISTINCT [U].[ArtifactID] 
        ///	FROM [EDDS].[eddsdbo].[User] (NOLOCK) AS [U]
        ///WHERE [U].[ArtifactID] NOT IN (
        ///	SELECT [LOG].[UserID]
        ///		FROM [EDDS].[eddsdbo].[KCD_1042192_DisclaimerAcceptanceLog] AS [LOG]
        ///		WHERE [LOG].[DisclaimerID] = @DisclaimerArtifactID
        ///).
        /// </summary>
        public static string NonAccepptedAllUsers {
            get {
                return ResourceManager.GetString("NonAccepptedAllUsers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT DISTINCT [U].[ArtifactID] 
        ///	FROM [EDDS].[eddsdbo].[User] (NOLOCK) AS [U]
        ///WHERE [U].[ArtifactID] NOT IN (
        ///	SELECT [LOG].[UserID]
        ///		FROM [EDDS].[eddsdbo].[KCD_1042192_DisclaimerAcceptanceLog] AS [LOG]
        ///		WHERE [LOG].[DisclaimerID] = @DisclaimerArtifactID AND
        ///			DATEADD(DAY, @ReacceptancePeriod, [LOG].[DateAccepted]) &gt; GETDATE()
        ///).
        /// </summary>
        public static string NonAccepptedAllUsersTimeCriteria {
            get {
                return ResourceManager.GetString("NonAccepptedAllUsersTimeCriteria", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT DISTINCT [U].[ArtifactID]
        ///	FROM [EDDS].[eddsdbo].[User] (NOLOCK) AS [U]
        ///INNER JOIN [EDDS].[eddsdbo].[GroupUser] (NOLOCK) AS [GU] ON [GU].[UserArtifactID] = [U].[ArtifactID]
        ///WHERE [GU].[GroupArtifactID] IN(
        ///{0}
        ///) AND [U].[ArtifactID] NOT IN (
        ///	SELECT [LOG].[UserID]
        ///		FROM [EDDS].[eddsdbo].[KCD_1042192_DisclaimerAcceptanceLog] AS [LOG]
        ///		WHERE [LOG].[DisclaimerID] = @DisclaimerArtifactID
        ///).
        /// </summary>
        public static string NonAcceptedUsersByGroups {
            get {
                return ResourceManager.GetString("NonAcceptedUsersByGroups", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT DISTINCT [U].[ArtifactID] 
        ///	FROM [EDDS].[eddsdbo].[User] (NOLOCK) AS [U]
        ///INNER JOIN [EDDS].[eddsdbo].[GroupUser] (NOLOCK) AS [GU] ON [GU].[UserArtifactID] = [U].[ArtifactID]
        ///WHERE [GU].[GroupArtifactID] IN
        ///({0}) AND 
        ///	[U].[ArtifactID] NOT IN (
        ///		SELECT [LOG].[UserID]
        ///			FROM [EDDS].[eddsdbo].[KCD_1042192_DisclaimerAcceptanceLog] AS [LOG]
        ///			WHERE [LOG].[DisclaimerID] = @DisclaimerArtifactID AND
        ///			DATEADD(DAY, @ReacceptancePeriod, [LOG].[DateAccepted]) &gt; GETDATE()
        ///	).
        /// </summary>
        public static string NonAcceptedUsersByGroupsTimeCriteria {
            get {
                return ResourceManager.GetString("NonAcceptedUsersByGroupsTimeCriteria", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UPDATE [EDDS].[eddsdbo].[Disclaimer] SET [Message] = @HTML.
        /// </summary>
        public static string UpdateLoginPage {
            get {
                return ResourceManager.GetString("UpdateLoginPage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT TOP 1 [CA].[CaseID]
        ///  FROM [EDDS].[eddsdbo].[CaseApplication] (NOLOCK) AS [CA]
        ///  INNER JOIN [EDDS].[eddsdbo].[ArtifactGuid] (NOLOCK) AS [AG] ON [CA].[ApplicationID] = [AG].[ArtifactID]
        ///  INNER JOIN [EDDS].[eddsdbo].[ExtendedCase] (NOLOCK) AS [EC] ON [CA].[CaseID] = [EC].[ArtifactID]
        ///  INNER JOIN [EDDS].[eddsdbo].[ApplicationInstall] AS [AI] WITH(NOLOCK)  ON CA.[CurrentApplicationInstallID] = AI.[ApplicationInstallID]
        ///  WHERE 
        ///	[AG].[ArtifactGuid] = @ApplicationGuid AND
        ///	[AI].[Status] = 6 --Rel [rest of string was truncated]&quot;;.
        /// </summary>
        public static string WorkspacesWhereAppIsInstalled {
            get {
                return ResourceManager.GetString("WorkspacesWhereAppIsInstalled", resourceCulture);
            }
        }
    }
}
